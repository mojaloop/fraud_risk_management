swagger: "2.0"
info:
  title: "Swagger Example"
  description: >
    FRM transaction validation.
  version: "0.1.0"
schemes:
  - "http"
paths:
  /:
    get:
      summary: "Check the status of the service"
      description: "If the service is up and running correctly the response will be 'UP'"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Health"
        500:
          $ref: "#/responses/500"
  /health:
    get:
      summary: "Check the status of the service"
      description: "If the service is up and running correctly the response will be 'UP'"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Health"
        500:
          $ref: "#/responses/500"
  /execute:
    post:
      summary: "Monitor transaction"
      description: "Mojaloop Transation"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Validates request params"
          required: true
          schema:
            $ref: "#/definitions/mojaloopQuotePostRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TransactionResponse"
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        500:
          $ref: "#/responses/500"

responses:
  400:
    description: Bad Request
    schema:
      $ref: "#/definitions/Error"
  401:
    description: Unauthorized
    schema:
      $ref: "#/definitions/Error"
  500:
    description: Internal Server Error
    schema:
      $ref: "#/definitions/Error"

definitions:
  Health:
    type: "object"
    properties:
      status:
        type: "string"
        enum:
          - "UP"
          - "DOWN"
  Transaction:
    type: "object"
    required:
      - AuthenticationType
    properties:
      AuthenticationType:
        type: string
  TransactionType:
    type: "object"
    required:
      - TransactionScenario
    properties:
      TransactionScenario:
        type: string
      TransactionInitiator:
        type: string
      TransactionInitiatorType:
        type: string
  partyIdInfo:
    type: "object"
    required:
      - partyIdType
      - partyIdentifier
      - fspId
  complexName:
    required:
      - firstName
      - lastName
  personalInfo:
    type: "object"
    required:
      - complexName
      - dateOfBirth
    properties:
      complexName:
        $ref: "#/definitions/complexName"
      dateOfBirth:
        type: "string"
  Payer:
    type: "object"
    required:
      - partyIdInfo
      - personalInfo
    properties:
      partyIdInfo:
        $ref: "#/definitions/partyIdInfo"
      personalInfo:
        $ref: "#/definitions/personalInfo"
  Payee:
    type: "object"
    required:
      - partyIdInfo
    properties:
      partyIdInfo:
        $ref: "#/definitions/partyIdInfo"
  amount:
    type: "object"
    required:
      - amount
      - currency
  transactionType:
    type: "object"
    required:
      - scenario
      - initiator
      - initiatorType
  mojaloopQuotePostRequest: 
    type: "object"
    required:
      - quoteId
      - transactionId
      - payer
      - payee
      - amountType
      - amount
      - transactionType
    properties:
      quoteId:
        type: string
      transactionId:
        type: string
      payer:
        $ref: "#/definitions/Payer"
      payee:
        $ref: "#/definitions/Payee"
      amountType:
        type: string
      amount:
        $ref: "#/definitions/amount"
      transactionType:
        $ref: "#/definitions/transactionType"
  
  TransactionResponse:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          result:
            type: "string"
            example: "Transaction is valid"

  Error:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          error:
            type: "string"
parameters:
  accept:
    in: header
    name: accept
    type: string
    required: true
  content-length:
    in: header
    name: content-length
    type: string
    required: true
  content-type:
    in: header
    name: content-type
    type: string
    required: true
